//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModLoader.OoT.API {
    
    
    public class WrapperFaroresWindData {
        
        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        private u32 pointer;
        
        public WrapperVec3i pos {get => this._pos(); set => this._pos(value);}//;
        
        public s32 yaw {get => this._yaw(); set => this._yaw(value);}//;
        
        public s32 playerParams {get => this._playerParams(); set => this._playerParams(value);}//;
        
        public s32 entranceIndex {get => this._entranceIndex(); set => this._entranceIndex(value);}//;
        
        public s32 roomIndex {get => this._roomIndex(); set => this._roomIndex(value);}//;
        
        public s32 set {get => this._set(); set => this._set(value);}//;
        
        public s32 tempSwchFlags {get => this._tempSwchFlags(); set => this._tempSwchFlags(value);}//;
        
        public s32 tempCollectFlags {get => this._tempCollectFlags(); set => this._tempCollectFlags(value);}//;
        
        public WrapperFaroresWindData(u32 pointer) {
           this.pointer = pointer;
        }
        
        public static uint getSize() {
          return 0x28;
        }
        
        private WrapperVec3i _pos() {
            return new WrapperVec3i(this.pointer + 0x00);
        }
        
        private void _pos(WrapperVec3i value) {
        }
        
        private s32 _yaw() {
            return Memory.RAM.ReadS32(this.pointer + 0x0C);
        }
        
        private void _yaw(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x0C, value);
        }
        
        private s32 _playerParams() {
            return Memory.RAM.ReadS32(this.pointer + 0x10);
        }
        
        private void _playerParams(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x10, value);
        }
        
        private s32 _entranceIndex() {
            return Memory.RAM.ReadS32(this.pointer + 0x14);
        }
        
        private void _entranceIndex(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x14, value);
        }
        
        private s32 _roomIndex() {
            return Memory.RAM.ReadS32(this.pointer + 0x18);
        }
        
        private void _roomIndex(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x18, value);
        }
        
        private s32 _set() {
            return Memory.RAM.ReadS32(this.pointer + 0x1C);
        }
        
        private void _set(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x1C, value);
        }
        
        private s32 _tempSwchFlags() {
            return Memory.RAM.ReadS32(this.pointer + 0x20);
        }
        
        private void _tempSwchFlags(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x20, value);
        }
        
        private s32 _tempCollectFlags() {
            return Memory.RAM.ReadS32(this.pointer + 0x24);
        }
        
        private void _tempCollectFlags(s32 value) {
            Memory.RAM.WriteS32(this.pointer + 0x24, value);
        }
    }
}
