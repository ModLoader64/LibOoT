//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Newtonsoft.Json.Converters;
using System.Runtime.Intrinsics.Arm;
using Buffer = NodeBuffer.Buffer;

namespace OoT.API
{


    public class WrapperSaveContext
    {

        [System.Text.Json.Serialization.JsonIgnoreAttribute()]
        public readonly u32 pointer;

        private u8 lastMagicLvl = 0;

        public s32 entranceIndex { get => this._entranceIndex(); set => this._entranceIndex(value); }//;

        public s32 linkAge { get => this._linkAge(); set => this._linkAge(value); }//;

        public s32 cutsceneIndex { get => this._cutsceneIndex(); set => this._cutsceneIndex(value); }//;

        public u16 dayTime { get => this._dayTime(); set => this._dayTime(value); }//;

        public s32 nightFlag { get => this._nightFlag(); set => this._nightFlag(value); }//;

        public s32 totalDays { get => this._totalDays(); set => this._totalDays(value); }//;

        public s32 bgsDayCount { get => this._bgsDayCount(); set => this._bgsDayCount(value); }//;

        public @char[] newf { get => this._newf(); set => this._newf(value); }//;

        public u16 deaths { get => this._deaths(); set => this._deaths(value); }//;

        public @char[] playerName { get => this._playerName(); set => this._playerName(value); }//;

        public s16 n64ddFlag { get => this._n64ddFlag(); set => this._n64ddFlag(value); }//;

        public u16 healthCapacity { get => this._healthCapacity(); set => this._healthCapacity(value); }//;

        public u16 health { get => this._health(); set => this._health(value); }//;

        public u8 magicLevel { get => this._magicLevel(); set => this._magicLevel(value); }//;

        public s8 magic { get => this._magic(); set => this._magic(value); }//;

        public s16 rupees { get => this._rupees(); set => this._rupees(value); }//;

        public u16 swordHealth { get => this._swordHealth(); set => this._swordHealth(value); }//;

        public u16 naviTimer { get => this._naviTimer(); set => this._naviTimer(value); }//;

        public u8 isMagicAcquired { get => this._isMagicAcquired(); set => this._isMagicAcquired(value); }//;

        public @char[] unk_3B { get => this._unk_3B(); set => this._unk_3B(value); }//;

        public u8 isDoubleMagicAcquired { get => this._isDoubleMagicAcquired(); set => this._isDoubleMagicAcquired(value); }//;

        public bool isDoubleDefenseAcquired { get => this._isDoubleDefenseAcquired(); set => this._isDoubleDefenseAcquired(value); }//;

        public u8 bgsFlag { get => this._bgsFlag(); set => this._bgsFlag(value); }//;

        public u8 ocarinaGameRoundNum { get => this._ocarinaGameRoundNum(); set => this._ocarinaGameRoundNum(value); }//;

        public WrapperItemEquips childEquips { get => this._childEquips(); set => this._childEquips(value); }//;

        public WrapperItemEquips adultEquips { get => this._adultEquips(); set => this._adultEquips(value); }//;

        public u32 unk_54 { get => this._unk_54(); set => this._unk_54(value); }//;

        public @char[] unk_58 { get => this._unk_58(); set => this._unk_58(value); }//;

        public s16 savedSceneId { get => this._savedSceneId(); set => this._savedSceneId(value); }//;

        public WrapperItemEquips equips { get => this._equips(); set => this._equips(value); }//;

        public WrapperInventory inventory { get => this._inventory(); set => this._inventory(value); }//;

        public WrapperSavedSceneFlags[] sceneFlags { get => this._sceneFlags(); set => this._sceneFlags(value); }//;

        public WrapperFaroresWindData fw { get => this._fw(); set => this._fw(value); }//;

        public @char[] unk_E8C { get => this._unk_E8C(); set => this._unk_E8C(value); }//;

        public Buffer gsFlags { get => this._gsFlags(); set => this._gsFlags(value); }//;

        public @char[] unk_EB4 { get => this._unk_EB4(); set => this._unk_EB4(value); }//;

        public s32[] highScores { get => this._highScores(); set => this._highScores(value); }//;

        public Buffer eventChkInf { get => this._eventChkInf(); set => this._eventChkInf(value); }//;

        public Buffer itemGetInf { get => this._itemGetInf(); set => this._itemGetInf(value); }//;

        public Buffer infTable { get => this._infTable(); set => this._infTable(value); }//;

        public @char[] unk_F34 { get => this._unk_F34(); set => this._unk_F34(value); }//;

        public u32 worldMapAreaData { get => this._worldMapAreaData(); set => this._worldMapAreaData(value); }//;

        public @char[] unk_F3C { get => this._unk_F3C(); set => this._unk_F3C(value); }//;

        public u8 scarecrowLongSongSet { get => this._scarecrowLongSongSet(); set => this._scarecrowLongSongSet(value); }//;

        public u8[] scarecrowLongSong { get => this._scarecrowLongSong(); set => this._scarecrowLongSong(value); }//;

        public @char[] unk_12A1 { get => this._unk_12A1(); set => this._unk_12A1(value); }//;

        public u8 scarecrowSpawnSongSet { get => this._scarecrowSpawnSongSet(); set => this._scarecrowSpawnSongSet(value); }//;

        public u8[] scarecrowSpawnSong { get => this._scarecrowSpawnSong(); set => this._scarecrowSpawnSong(value); }//;

        public @char[] unk_1346 { get => this._unk_1346(); set => this._unk_1346(value); }//;

        public WrapperHorseData horseData { get => this._horseData(); set => this._horseData(value); }//;

        public u16 checksum { get => this._checksum(); set => this._checksum(value); }//;

        public s32 fileNum { get => this._fileNum(); set => this._fileNum(value); }//;

        public @char[] unk_1358 { get => this._unk_1358(); set => this._unk_1358(value); }//;

        public s32 gameMode { get => this._gameMode(); set => this._gameMode(value); }//;

        public s32 sceneLayer { get => this._sceneLayer(); set => this._sceneLayer(value); }//;

        public s32 respawnFlag { get => this._respawnFlag(); set => this._respawnFlag(value); }//;

        public WrapperRespawnData[] respawn { get => this._respawn(); set => this._respawn(value); }//;

        public f32 entranceSpeed { get => this._entranceSpeed(); set => this._entranceSpeed(value); }//;

        public u16 entranceSound { get => this._entranceSound(); set => this._entranceSound(value); }//;

        public @char[] unk_13C2 { get => this._unk_13C2(); set => this._unk_13C2(value); }//;

        public u8 retainWeatherMode { get => this._retainWeatherMode(); set => this._retainWeatherMode(value); }//;

        public s16 dogParams { get => this._dogParams(); set => this._dogParams(value); }//;

        public u8 envHazardTextTriggerFlags { get => this._envHazardTextTriggerFlags(); set => this._envHazardTextTriggerFlags(value); }//;

        public u8 showTitleCard { get => this._showTitleCard(); set => this._showTitleCard(value); }//;

        public s16 nayrusLoveTimer { get => this._nayrusLoveTimer(); set => this._nayrusLoveTimer(value); }//;

        public @char[] unk_13CA { get => this._unk_13CA(); set => this._unk_13CA(value); }//;

        public s16 rupeeAccumulator { get => this._rupeeAccumulator(); set => this._rupeeAccumulator(value); }//;

        public s16 timerState { get => this._timerState(); set => this._timerState(value); }//;

        public s16 timerSeconds { get => this._timerSeconds(); set => this._timerSeconds(value); }//;

        public s16 subTimerState { get => this._subTimerState(); set => this._subTimerState(value); }//;

        public s16 subTimerSeconds { get => this._subTimerSeconds(); set => this._subTimerSeconds(value); }//;

        public s16[] timerX { get => this._timerX(); set => this._timerX(value); }//;

        public s16[] timerY { get => this._timerY(); set => this._timerY(value); }//;

        public @char[] unk_13DE { get => this._unk_13DE(); set => this._unk_13DE(value); }//;

        public u8 seqId { get => this._seqId(); set => this._seqId(value); }//;

        public u8 natureAmbienceId { get => this._natureAmbienceId(); set => this._natureAmbienceId(value); }//;

        public u8[] buttonStatus { get => this._buttonStatus(); set => this._buttonStatus(value); }//;

        public u8 forceRisingButtonAlphas { get => this._forceRisingButtonAlphas(); set => this._forceRisingButtonAlphas(value); }//;

        public u16 nextHudVisibilityMode { get => this._nextHudVisibilityMode(); set => this._nextHudVisibilityMode(value); }//;

        public u16 hudVisibilityMode { get => this._hudVisibilityMode(); set => this._hudVisibilityMode(value); }//;

        public u16 hudVisibilityModeTimer { get => this._hudVisibilityModeTimer(); set => this._hudVisibilityModeTimer(value); }//;

        public u16 prevHudVisibilityMode { get => this._prevHudVisibilityMode(); set => this._prevHudVisibilityMode(value); }//;

        public s16 magicState { get => this._magicState(); set => this._magicState(value); }//;

        public s16 prevMagicState { get => this._prevMagicState(); set => this._prevMagicState(value); }//;

        public s16 magicCapacity { get => this._magicCapacity(); set => this._magicCapacity(value); }//;

        public s16 magicFillTarget { get => this._magicFillTarget(); set => this._magicFillTarget(value); }//;

        public s16 magicTarget { get => this._magicTarget(); set => this._magicTarget(value); }//;

        public u16[] eventInf { get => this._eventInf(); set => this._eventInf(value); }//;

        public u16 mapIndex { get => this._mapIndex(); set => this._mapIndex(value); }//;

        public u16 minigameState { get => this._minigameState(); set => this._minigameState(value); }//;

        public u16 minigameScore { get => this._minigameScore(); set => this._minigameScore(value); }//;

        public @char[] unk_1408 { get => this._unk_1408(); set => this._unk_1408(value); }//;

        public u8 language { get => this._language(); set => this._language(value); }//;

        public u8 audioSetting { get => this._audioSetting(); set => this._audioSetting(value); }//;

        public @char[] unk_140B { get => this._unk_140B(); set => this._unk_140B(value); }//;

        public u8 zTargetSetting { get => this._zTargetSetting(); set => this._zTargetSetting(value); }//;

        public u16 forcedSeqId { get => this._forcedSeqId(); set => this._forcedSeqId(value); }//;

        public u8 cutsceneTransitionControl { get => this._cutsceneTransitionControl(); set => this._cutsceneTransitionControl(value); }//;

        public @char[] unk_1411 { get => this._unk_1411(); set => this._unk_1411(value); }//;

        public u16 nextCutsceneIndex { get => this._nextCutsceneIndex(); set => this._nextCutsceneIndex(value); }//;

        public u8 cutsceneTrigger { get => this._cutsceneTrigger(); set => this._cutsceneTrigger(value); }//;

        public u8 chamberCutsceneNum { get => this._chamberCutsceneNum(); set => this._chamberCutsceneNum(value); }//;

        public u16 nextDayTime { get => this._nextDayTime(); set => this._nextDayTime(value); }//;

        public u8 transFadeDuration { get => this._transFadeDuration(); set => this._transFadeDuration(value); }//;

        public u8 transWipeSpeed { get => this._transWipeSpeed(); set => this._transWipeSpeed(value); }//;

        public u16 skyboxTime { get => this._skyboxTime(); set => this._skyboxTime(value); }//;

        public u8 dogIsLost { get => this._dogIsLost(); set => this._dogIsLost(value); }//;

        public u8 nextTransitionType { get => this._nextTransitionType(); set => this._nextTransitionType(value); }//;

        public @char[] unk_141E { get => this._unk_141E(); set => this._unk_141E(value); }//;

        public s16 worldMapArea { get => this._worldMapArea(); set => this._worldMapArea(value); }//;

        public s16 sunsSongState { get => this._sunsSongState(); set => this._sunsSongState(value); }//;

        public s16 healthAccumulator { get => this._healthAccumulator(); set => this._healthAccumulator(value); }//;

        public WrapperSaveContext(u32 pointer)
        {
            this.pointer = pointer;
        }

        public Buffer GetSceneFlagsRaw()
        {
            Buffer buf = new Buffer(0xD90);

            for (int i = 0; i < 124; i++)
            {
                buf.WriteBuffer(i * 0x1C, GetSceneFlagsFromIndexRaw(i));
            }
            
            return buf;
        }

        public void SetSceneFlagsRaw(Buffer buf)
        {
            if (buf.Size != 0xD90)
            {
                Console.WriteLine($"Error: Input is too big/small! Expected {0xD90}, Recieved {buf.Size}");
                return;
            }
            for (int i = 0; i < 124; i++)
            {
                WrapperSavedSceneFlags flags = GetSceneFlagsFromIndex(i);
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x0), buf.ReadU32(0x0));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x4), buf.ReadU32(0x4));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x8), buf.ReadU32(0x8));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0xC), buf.ReadU32(0xC));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x10), buf.ReadU32(0x10));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x14), buf.ReadU32(0x14));
                Memory.RAM.WriteU32((uint)(this.pointer + 0xD4 + (i * 0x1C) + 0x18), buf.ReadU32(0x18));
            }
        }

        public Buffer GetSceneFlagsFromIndexRaw(int index)
        {
            WrapperSavedSceneFlags flags = GetSceneFlagsFromIndex(index);
            return new Buffer(new u32[] { flags.chest, flags.swch, flags.clear, flags.collect, flags.unk, flags.floors, flags.rooms });
        }

        public void SetSceneFlagsSetIndexRaw(int index, Buffer incoming)
        {
            WrapperSavedSceneFlags flags = new WrapperSavedSceneFlags((uint)(this.pointer + 0xD4 + (index * 0x1C)));
            flags.chest = incoming.ReadU32(0x0);
            flags.swch = incoming.ReadU32(0x4);
            flags.clear = incoming.ReadU32(0x8);
            flags.collect = incoming.ReadU32(0xC);
            flags.unk = incoming.ReadU32(0x10);
            flags.rooms = incoming.ReadU32(0x14);
            flags.floors = incoming.ReadU32(0x18);
        }

        public WrapperSavedSceneFlags GetSceneFlagsFromIndex(int index)
        {
            WrapperSavedSceneFlags flags = new WrapperSavedSceneFlags((uint)(this.pointer + 0xD4 + (index * 0x1C)));
            return flags;
        }

        public void SetSceneFlagsToIndex(int index, WrapperSavedSceneFlags incoming)
        {
            WrapperSavedSceneFlags flags = new WrapperSavedSceneFlags((uint)(this.pointer + 0xD4 + (index * 0x1C)));
            flags = incoming;
        }

        public static uint getSize()
        {
            return 0x1428;
        }

        private s32 _entranceIndex()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0000);
        }

        private void _entranceIndex(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0000, value);
        }

        private s32 _linkAge()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0004);
        }

        private void _linkAge(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0004, value);
        }

        private s32 _cutsceneIndex()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0008);
        }

        private void _cutsceneIndex(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0008, value);
        }

        private u16 _dayTime()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x000C);
        }

        private void _dayTime(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x000C, value);
        }

        private s32 _nightFlag()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0010);
        }

        private void _nightFlag(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0010, value);
        }

        private s32 _totalDays()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0014);
        }

        private void _totalDays(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0014, value);
        }

        private s32 _bgsDayCount()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x0018);
        }

        private void _bgsDayCount(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x0018, value);
        }

        // #ARRCOUNT 6
        private @char[] _newf()
        {
            @char[] bytes = new @char[6]; for (u32 i = 0; i < 6; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x001C + (i * 1)); }
            return bytes;
        }

        private void _newf(@char[] value)
        {
            for (u32 i = 0; i < 6; i++) { Memory.RAM.WriteU8(this.pointer + 0x001C + (i * 1), value[i]); }
        }

        private u16 _deaths()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x0022);
        }

        private void _deaths(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x0022, value);
        }

        // #ARRCOUNT 8
        private @char[] _playerName()
        {
            @char[] bytes = new @char[8]; for (u32 i = 0; i < 8; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0024 + (i * 1)); }
            return bytes;
        }

        private void _playerName(@char[] value)
        {
            for (u32 i = 0; i < 8; i++) { Memory.RAM.WriteU8(this.pointer + 0x0024 + (i * 1), value[i]); }
        }

        private s16 _n64ddFlag()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x002C);
        }

        private void _n64ddFlag(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x002C, value);
        }

        private u16 _healthCapacity()
        {
            u16 value = Memory.RAM.ReadU16(this.pointer + 0x002E);
            return (u16)(value / 0x10);
        }

        private void _healthCapacity(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x002E, (u16)(value * 0x10));
        }

        private u16 _health()
        {
            u16 value = Memory.RAM.ReadU16(this.pointer + 0x0030);
            return (u16)(value / 0x10);
        }

        private void _health(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x0030, (u16)(value * 0x10));
        }

        private u8 _magicLevel()
        {
            lastMagicLvl = Memory.RAM.ReadU8(this.pointer + 0x0032);
            return lastMagicLvl;
        }

        private void _magicLevel(u8 value)
        {
            if (value <= lastMagicLvl) return;
            lastMagicLvl = value;
            switch (value)
            {
                case 0:
                    isMagicAcquired = 0;
                    isDoubleMagicAcquired = 0;
                    magicFillTarget = 0;
                    Memory.RAM.WriteU8(this.pointer + 0x0032, 0);
                    magicState = 0x9; // Fill
                    break;
                case 1:
                    isMagicAcquired = 1;
                    isDoubleMagicAcquired = 0;
                    magicFillTarget = 0x30;
                    Memory.RAM.WriteU8(this.pointer + 0x0032, 0);
                    magicState = 0x9; // Fill
                    break;
                case 2:
                    isMagicAcquired = 1;
                    isDoubleMagicAcquired = 1;
                    magicFillTarget = 0x60;
                    Memory.RAM.WriteU8(this.pointer + 0x0032, 0);
                    magicState = 0x9; // Fill
                    break;
            }

        }

        private s8 _magic()
        {
            return Memory.RAM.ReadS8(this.pointer + 0x0033);
        }

        private void _magic(s8 value)
        {
            Memory.RAM.WriteS8(this.pointer + 0x0033, value);
        }

        private s16 _rupees()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x0034);
        }

        private void _rupees(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x0034, value);
        }

        private u16 _swordHealth()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x0036);
        }

        private void _swordHealth(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x0036, value);
        }

        private u16 _naviTimer()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x0038);
        }

        private void _naviTimer(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x0038, value);
        }

        private u8 _isMagicAcquired()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x003A);
        }

        private void _isMagicAcquired(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x003A, value);
        }

        // #ARRCOUNT 0x01
        private @char[] _unk_3B()
        {
            @char[] bytes = new @char[0x01]; for (u32 i = 0; i < 0x01; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x003B + (i * 1)); }
            return bytes;
        }

        private void _unk_3B(@char[] value)
        {
            for (u32 i = 0; i < 0x01; i++) { Memory.RAM.WriteU8(this.pointer + 0x003B + (i * 1), value[i]); }
        }

        private u8 _isDoubleMagicAcquired()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x003C);
        }

        private void _isDoubleMagicAcquired(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x003C, value);
        }

        private bool _isDoubleDefenseAcquired()
        {
            return (Memory.RAM.ReadU8(this.pointer + 0x003D) != 0);
        }

        private void _isDoubleDefenseAcquired(bool flag)
        {
            if (flag)
            {
                inventory.defenseHearts = 20;
                Memory.RAM.WriteU8(this.pointer + 0x003D, 1);
            }
            else
            {
                inventory.defenseHearts = 0;
                Memory.RAM.WriteU8(this.pointer + 0x003D, 0);
            }
        }

        private u8 _bgsFlag()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x003E);
        }

        private void _bgsFlag(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x003E, value);
        }

        private u8 _ocarinaGameRoundNum()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x003F);
        }

        private void _ocarinaGameRoundNum(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x003F, value);
        }

        private WrapperItemEquips _childEquips()
        {
            return new WrapperItemEquips(this.pointer + 0x0040);
        }

        private void _childEquips(WrapperItemEquips value)
        {
        }

        private WrapperItemEquips _adultEquips()
        {
            return new WrapperItemEquips(this.pointer + 0x004A);
        }

        private void _adultEquips(WrapperItemEquips value)
        {
        }

        private u32 _unk_54()
        {
            return Memory.RAM.ReadU32(this.pointer + 0x0054);
        }

        private void _unk_54(u32 value)
        {
            Memory.RAM.WriteU32(this.pointer + 0x0054, value);
        }

        // #ARRCOUNT 0x0E
        private @char[] _unk_58()
        {
            @char[] bytes = new @char[0x0E]; for (u32 i = 0; i < 0x0E; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0058 + (i * 1)); }
            return bytes;
        }

        private void _unk_58(@char[] value)
        {
            for (u32 i = 0; i < 0x0E; i++) { Memory.RAM.WriteU8(this.pointer + 0x0058 + (i * 1), value[i]); }
        }

        private s16 _savedSceneId()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x0066);
        }

        private void _savedSceneId(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x0066, value);
        }

        private WrapperItemEquips _equips()
        {
            return new WrapperItemEquips(this.pointer + 0x0068);
        }

        private void _equips(WrapperItemEquips value)
        {
        }

        private WrapperInventory _inventory()
        {
            return new WrapperInventory(this.pointer + 0x0074);
        }

        private void _inventory(WrapperInventory value)
        {
        }

        // #ARRCOUNT 124
        private WrapperSavedSceneFlags[] _sceneFlags()
        {
            WrapperSavedSceneFlags[] substructs = new WrapperSavedSceneFlags[124]; for (u32 i = 0; i < 124; i++) { substructs[i] = new WrapperSavedSceneFlags(this.pointer + 0x00D4 + (i * WrapperSavedSceneFlags.getSize())); }; return substructs;
        }

        private void _sceneFlags(WrapperSavedSceneFlags[] value)
        {
        }

        private WrapperFaroresWindData _fw()
        {
            return new WrapperFaroresWindData(this.pointer + 0x0E64);
        }

        private void _fw(WrapperFaroresWindData value)
        {
        }

        // #ARRCOUNT 0x10
        private @char[] _unk_E8C()
        {
            @char[] bytes = new @char[0x10]; for (u32 i = 0; i < 0x10; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0E8C + (i * 1)); }
            return bytes;
        }

        private void _unk_E8C(@char[] value)
        {
            for (u32 i = 0; i < 0x10; i++) { Memory.RAM.WriteU8(this.pointer + 0x0E8C + (i * 1), value[i]); }
        }

        // #ARRCOUNT 6
        private Buffer _gsFlags()
        {
            Buffer bytes = new Buffer(0x6 * 0x4);
            for (u32 i = 0; i < 6; i++) { bytes.WriteU32((u8)(i * 4), Memory.RAM.ReadU32(this.pointer + 0x0E9C + (i * 4)));  }
            return bytes;
        }

        private void _gsFlags(Buffer value)
        {
            for (u32 i = 0; i < 6; i++) { Memory.RAM.WriteU32(this.pointer + 0x0E9C + (i * 4), value.ReadU32((int)(i * 4))); }
        }

        // #ARRCOUNT 0x4
        private @char[] _unk_EB4()
        {
            @char[] bytes = new @char[0x4]; for (u32 i = 0; i < 0x4; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0EB4 + (i * 1)); }
            return bytes;
        }

        private void _unk_EB4(@char[] value)
        {
            for (u32 i = 0; i < 0x4; i++) { Memory.RAM.WriteU8(this.pointer + 0x0EB4 + (i * 1), value[i]); }
        }

        // #ARRCOUNT 7
        private s32[] _highScores()
        {
            s32[] bytes = new s32[7]; for (u32 i = 0; i < 7; i++) { bytes[i] = Memory.RAM.ReadS32(this.pointer + 0x0EB8 + (i * 4)); }
            return bytes;
        }

        private void _highScores(s32[] value)
        {
            for (u32 i = 0; i < 7; i++) { Memory.RAM.WriteS32(this.pointer + 0x0EB8 + (i * 4), value[i]); }
        }

        // #ARRCOUNT 14
        private Buffer _eventChkInf()
        {
            Buffer bytes = new Buffer(0x1C); 
            for (u32 i = 0; i < 14; i++) { bytes.WriteU16((int)(i * 2), Memory.RAM.ReadU16(this.pointer + 0x0ED4 + (i * 2))); }
            return bytes;
        }

        private void _eventChkInf(Buffer value)
        {
            for (u32 i = 0; i < 14; i++) { Memory.RAM.WriteU16(this.pointer + 0x0ED4 + (i * 2), value.ReadU16((int)(i * 2))); }
        }

        // #ARRCOUNT 4
        private Buffer _itemGetInf()
        {
            Buffer bytes = new Buffer(0x8);
            for (u32 i = 0; i < 4; i++) { bytes.WriteU16((int)(i * 2), Memory.RAM.ReadU16(this.pointer + 0x0EF0 + (i * 2))); }
            return bytes;
        }

        private void _itemGetInf(Buffer value)
        {
            for (u32 i = 0; i < 4; i++) { Memory.RAM.WriteU16(this.pointer + 0x0EF0 + (i * 2), value.ReadU16((int)(i * 2))); }
        }

        // #ARRCOUNT 30 u16
        private Buffer _infTable()
        {
            Buffer bytes = new Buffer(0x3C); 
            for (u32 i = 0; i < 30; i++) { bytes.WriteU16((int)(i * 2), Memory.RAM.ReadU16(this.pointer + 0x0EF8 + (i * 2))); }
            return bytes;
        }

        private void _infTable(Buffer value)
        {
            for (u32 i = 0; i < 30; i++) { Memory.RAM.WriteU16(this.pointer + 0x0EF8 + (i * 2), value.ReadU16((int)(i * 2))); }
        }

        // #ARRCOUNT 0x04
        private @char[] _unk_F34()
        {
            @char[] bytes = new @char[0x04]; for (u32 i = 0; i < 0x04; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0F34 + (i * 1)); }
            return bytes;
        }

        private void _unk_F34(@char[] value)
        {
            for (u32 i = 0; i < 0x04; i++) { Memory.RAM.WriteU8(this.pointer + 0x0F34 + (i * 1), value[i]); }
        }

        private u32 _worldMapAreaData()
        {
            return Memory.RAM.ReadU32(this.pointer + 0x0F38);
        }

        private void _worldMapAreaData(u32 value)
        {
            Memory.RAM.WriteU32(this.pointer + 0x0F38, value);
        }

        // #ARRCOUNT 0x4
        private @char[] _unk_F3C()
        {
            @char[] bytes = new @char[0x4]; for (u32 i = 0; i < 0x4; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0F3C + (i * 1)); }
            return bytes;
        }

        private void _unk_F3C(@char[] value)
        {
            for (u32 i = 0; i < 0x4; i++) { Memory.RAM.WriteU8(this.pointer + 0x0F3C + (i * 1), value[i]); }
        }

        private u8 _scarecrowLongSongSet()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x0F40);
        }

        private void _scarecrowLongSongSet(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x0F40, value);
        }

        // #ARRCOUNT 0x360
        private u8[] _scarecrowLongSong()
        {
            u8[] bytes = new u8[0x360]; for (u32 i = 0; i < 0x360; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x0F41 + (i * 1)); }
            return bytes;
        }

        private void _scarecrowLongSong(u8[] value)
        {
            for (u32 i = 0; i < 0x360; i++) { Memory.RAM.WriteU8(this.pointer + 0x0F41 + (i * 1), value[i]); }
        }

        // #ARRCOUNT 0x24
        private @char[] _unk_12A1()
        {
            @char[] bytes = new @char[0x24]; for (u32 i = 0; i < 0x24; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x12A1 + (i * 1)); }
            return bytes;
        }

        private void _unk_12A1(@char[] value)
        {
            for (u32 i = 0; i < 0x24; i++) { Memory.RAM.WriteU8(this.pointer + 0x12A1 + (i * 1), value[i]); }
        }

        private u8 _scarecrowSpawnSongSet()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x12C5);
        }

        private void _scarecrowSpawnSongSet(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x12C5, value);
        }

        // #ARRCOUNT 0x80
        private u8[] _scarecrowSpawnSong()
        {
            u8[] bytes = new u8[0x80]; for (u32 i = 0; i < 0x80; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x12C6 + (i * 1)); }
            return bytes;
        }

        private void _scarecrowSpawnSong(u8[] value)
        {
            for (u32 i = 0; i < 0x80; i++) { Memory.RAM.WriteU8(this.pointer + 0x12C6 + (i * 1), value[i]); }
        }

        // #ARRCOUNT 0x02
        private @char[] _unk_1346()
        {
            @char[] bytes = new @char[0x02]; for (u32 i = 0; i < 0x02; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x1346 + (i * 1)); }
            return bytes;
        }

        private void _unk_1346(@char[] value)
        {
            for (u32 i = 0; i < 0x02; i++) { Memory.RAM.WriteU8(this.pointer + 0x1346 + (i * 1), value[i]); }
        }

        private WrapperHorseData _horseData()
        {
            return new WrapperHorseData(this.pointer + 0x1348);
        }

        private void _horseData(WrapperHorseData value)
        {
        }

        private u16 _checksum()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1352);
        }

        private void _checksum(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1352, value);
        }

        private s32 _fileNum()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x1354);
        }

        private void _fileNum(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x1354, value);
        }

        // #ARRCOUNT 0x0004
        private @char[] _unk_1358()
        {
            @char[] bytes = new @char[0x0004]; for (u32 i = 0; i < 0x0004; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x1358 + (i * 1)); }
            return bytes;
        }

        private void _unk_1358(@char[] value)
        {
            for (u32 i = 0; i < 0x0004; i++) { Memory.RAM.WriteU8(this.pointer + 0x1358 + (i * 1), value[i]); }
        }

        private s32 _gameMode()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x135C);
        }

        private void _gameMode(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x135C, value);
        }

        private s32 _sceneLayer()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x1360);
        }

        private void _sceneLayer(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x1360, value);
        }

        private s32 _respawnFlag()
        {
            return Memory.RAM.ReadS32(this.pointer + 0x1364);
        }

        private void _respawnFlag(s32 value)
        {
            Memory.RAM.WriteS32(this.pointer + 0x1364, value);
        }

        // #ARRCOUNT (int)RespawnMode.RESPAWN_MODE_MAX
        private WrapperRespawnData[] _respawn()
        {
            WrapperRespawnData[] substructs = new WrapperRespawnData[(int)RespawnMode.RESPAWN_MODE_MAX]; for (u32 i = 0; i < (int)RespawnMode.RESPAWN_MODE_MAX; i++) { substructs[i] = new WrapperRespawnData(this.pointer + 0x1368 + (i * WrapperRespawnData.getSize())); }; return substructs;
        }

        private void _respawn(WrapperRespawnData[] value)
        {
        }

        private f32 _entranceSpeed()
        {
            return Memory.RAM.ReadF32(this.pointer + 0x13BC);
        }

        private void _entranceSpeed(f32 value)
        {
            Memory.RAM.WriteF32(this.pointer + 0x13BC, value);
        }

        private u16 _entranceSound()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x13C0);
        }

        private void _entranceSound(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x13C0, value);
        }

        // #ARRCOUNT 0x0001
        private @char[] _unk_13C2()
        {
            @char[] bytes = new @char[0x0001]; for (u32 i = 0; i < 0x0001; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x13C2 + (i * 1)); }
            return bytes;
        }

        private void _unk_13C2(@char[] value)
        {
            for (u32 i = 0; i < 0x0001; i++) { Memory.RAM.WriteU8(this.pointer + 0x13C2 + (i * 1), value[i]); }
        }

        private u8 _retainWeatherMode()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13C3);
        }

        private void _retainWeatherMode(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13C3, value);
        }

        private s16 _dogParams()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13C4);
        }

        private void _dogParams(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13C4, value);
        }

        private u8 _envHazardTextTriggerFlags()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13C6);
        }

        private void _envHazardTextTriggerFlags(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13C6, value);
        }

        private u8 _showTitleCard()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13C7);
        }

        private void _showTitleCard(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13C7, value);
        }

        private s16 _nayrusLoveTimer()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13C8);
        }

        private void _nayrusLoveTimer(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13C8, value);
        }

        // #ARRCOUNT 0x0002
        private @char[] _unk_13CA()
        {
            @char[] bytes = new @char[0x0002]; for (u32 i = 0; i < 0x0002; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x13CA + (i * 1)); }
            return bytes;
        }

        private void _unk_13CA(@char[] value)
        {
            for (u32 i = 0; i < 0x0002; i++) { Memory.RAM.WriteU8(this.pointer + 0x13CA + (i * 1), value[i]); }
        }

        private s16 _rupeeAccumulator()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13CC);
        }

        private void _rupeeAccumulator(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13CC, value);
        }

        private s16 _timerState()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13CE);
        }

        private void _timerState(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13CE, value);
        }

        private s16 _timerSeconds()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13D0);
        }

        private void _timerSeconds(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13D0, value);
        }

        private s16 _subTimerState()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13D2);
        }

        private void _subTimerState(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13D2, value);
        }

        private s16 _subTimerSeconds()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13D4);
        }

        private void _subTimerSeconds(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13D4, value);
        }

        // #ARRCOUNT (int)TimerId.TIMER_ID_MAX
        private s16[] _timerX()
        {
            s16[] bytes = new s16[(int)TimerId.TIMER_ID_MAX]; for (u32 i = 0; i < (int)TimerId.TIMER_ID_MAX; i++) { bytes[i] = Memory.RAM.ReadS16(this.pointer + 0x13D6 + (i * 2)); }
            return bytes;
        }

        private void _timerX(s16[] value)
        {
            for (u32 i = 0; i < (int)TimerId.TIMER_ID_MAX; i++) { Memory.RAM.WriteS16(this.pointer + 0x13D6 + (i * 2), value[i]); }
        }

        // #ARRCOUNT (int)TimerId.TIMER_ID_MAX
        private s16[] _timerY()
        {
            s16[] bytes = new s16[(int)TimerId.TIMER_ID_MAX]; for (u32 i = 0; i < (int)TimerId.TIMER_ID_MAX; i++) { bytes[i] = Memory.RAM.ReadS16(this.pointer + 0x13DA + (i * 2)); }
            return bytes;
        }

        private void _timerY(s16[] value)
        {
            for (u32 i = 0; i < (int)TimerId.TIMER_ID_MAX; i++) { Memory.RAM.WriteS16(this.pointer + 0x13DA + (i * 2), value[i]); }
        }

        // #ARRCOUNT 0x0002
        private @char[] _unk_13DE()
        {
            @char[] bytes = new @char[0x0002]; for (u32 i = 0; i < 0x0002; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x13DE + (i * 1)); }
            return bytes;
        }

        private void _unk_13DE(@char[] value)
        {
            for (u32 i = 0; i < 0x0002; i++) { Memory.RAM.WriteU8(this.pointer + 0x13DE + (i * 1), value[i]); }
        }

        private u8 _seqId()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13E0);
        }

        private void _seqId(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13E0, value);
        }

        private u8 _natureAmbienceId()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13E1);
        }

        private void _natureAmbienceId(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13E1, value);
        }

        // #ARRCOUNT 5
        private u8[] _buttonStatus()
        {
            u8[] bytes = new u8[5]; for (u32 i = 0; i < 5; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x13E2 + (i * 1)); }
            return bytes;
        }

        private void _buttonStatus(u8[] value)
        {
            for (u32 i = 0; i < 5; i++) { Memory.RAM.WriteU8(this.pointer + 0x13E2 + (i * 1), value[i]); }
        }

        private u8 _forceRisingButtonAlphas()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x13E7);
        }

        private void _forceRisingButtonAlphas(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x13E7, value);
        }

        private u16 _nextHudVisibilityMode()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x13E8);
        }

        private void _nextHudVisibilityMode(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x13E8, value);
        }

        private u16 _hudVisibilityMode()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x13EA);
        }

        private void _hudVisibilityMode(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x13EA, value);
        }

        private u16 _hudVisibilityModeTimer()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x13EC);
        }

        private void _hudVisibilityModeTimer(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x13EC, value);
        }

        private u16 _prevHudVisibilityMode()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x13EE);
        }

        private void _prevHudVisibilityMode(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x13EE, value);
        }

        private s16 _magicState()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13F0);
        }

        private void _magicState(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13F0, value);
        }

        private s16 _prevMagicState()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13F2);
        }

        private void _prevMagicState(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13F2, value);
        }

        private s16 _magicCapacity()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13F4);
        }

        private void _magicCapacity(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13F4, value);
        }

        private s16 _magicFillTarget()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13F6);
        }

        private void _magicFillTarget(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13F6, value);
        }

        private s16 _magicTarget()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x13F8);
        }

        private void _magicTarget(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x13F8, value);
        }

        // #ARRCOUNT 4
        private u16[] _eventInf()
        {
            u16[] bytes = new u16[4]; for (u32 i = 0; i < 4; i++) { bytes[i] = Memory.RAM.ReadU16(this.pointer + 0x13FA + (i * 2)); }
            return bytes;
        }

        private void _eventInf(u16[] value)
        {
            for (u32 i = 0; i < 4; i++) { Memory.RAM.WriteU16(this.pointer + 0x13FA + (i * 2), value[i]); }
        }

        private u16 _mapIndex()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1402);
        }

        private void _mapIndex(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1402, value);
        }

        private u16 _minigameState()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1404);
        }

        private void _minigameState(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1404, value);
        }

        private u16 _minigameScore()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1406);
        }

        private void _minigameScore(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1406, value);
        }

        // #ARRCOUNT 0x0001
        private @char[] _unk_1408()
        {
            @char[] bytes = new @char[0x0001]; for (u32 i = 0; i < 0x0001; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x1408 + (i * 1)); }
            return bytes;
        }

        private void _unk_1408(@char[] value)
        {
            for (u32 i = 0; i < 0x0001; i++) { Memory.RAM.WriteU8(this.pointer + 0x1408 + (i * 1), value[i]); }
        }

        private u8 _language()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1409);
        }

        private void _language(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1409, value);
        }

        private u8 _audioSetting()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x140A);
        }

        private void _audioSetting(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x140A, value);
        }

        // #ARRCOUNT 0x0001
        private @char[] _unk_140B()
        {
            @char[] bytes = new @char[0x0001]; for (u32 i = 0; i < 0x0001; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x140B + (i * 1)); }
            return bytes;
        }

        private void _unk_140B(@char[] value)
        {
            for (u32 i = 0; i < 0x0001; i++) { Memory.RAM.WriteU8(this.pointer + 0x140B + (i * 1), value[i]); }
        }

        private u8 _zTargetSetting()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x140C);
        }

        private void _zTargetSetting(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x140C, value);
        }

        private u16 _forcedSeqId()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x140E);
        }

        private void _forcedSeqId(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x140E, value);
        }

        private u8 _cutsceneTransitionControl()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1410);
        }

        private void _cutsceneTransitionControl(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1410, value);
        }

        // #ARRCOUNT 0x0001
        private @char[] _unk_1411()
        {
            @char[] bytes = new @char[0x0001]; for (u32 i = 0; i < 0x0001; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x1411 + (i * 1)); }
            return bytes;
        }

        private void _unk_1411(@char[] value)
        {
            for (u32 i = 0; i < 0x0001; i++) { Memory.RAM.WriteU8(this.pointer + 0x1411 + (i * 1), value[i]); }
        }

        private u16 _nextCutsceneIndex()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1412);
        }

        private void _nextCutsceneIndex(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1412, value);
        }

        private u8 _cutsceneTrigger()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1414);
        }

        private void _cutsceneTrigger(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1414, value);
        }

        private u8 _chamberCutsceneNum()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1415);
        }

        private void _chamberCutsceneNum(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1415, value);
        }

        private u16 _nextDayTime()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x1416);
        }

        private void _nextDayTime(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x1416, value);
        }

        private u8 _transFadeDuration()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1418);
        }

        private void _transFadeDuration(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1418, value);
        }

        private u8 _transWipeSpeed()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x1419);
        }

        private void _transWipeSpeed(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x1419, value);
        }

        private u16 _skyboxTime()
        {
            return Memory.RAM.ReadU16(this.pointer + 0x141A);
        }

        private void _skyboxTime(u16 value)
        {
            Memory.RAM.WriteU16(this.pointer + 0x141A, value);
        }

        private u8 _dogIsLost()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x141C);
        }

        private void _dogIsLost(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x141C, value);
        }

        private u8 _nextTransitionType()
        {
            return Memory.RAM.ReadU8(this.pointer + 0x141D);
        }

        private void _nextTransitionType(u8 value)
        {
            Memory.RAM.WriteU8(this.pointer + 0x141D, value);
        }

        // #ARRCOUNT 0x0002
        private @char[] _unk_141E()
        {
            @char[] bytes = new @char[0x0002]; for (u32 i = 0; i < 0x0002; i++) { bytes[i] = Memory.RAM.ReadU8(this.pointer + 0x141E + (i * 1)); }
            return bytes;
        }

        private void _unk_141E(@char[] value)
        {
            for (u32 i = 0; i < 0x0002; i++) { Memory.RAM.WriteU8(this.pointer + 0x141E + (i * 1), value[i]); }
        }

        private s16 _worldMapArea()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x1420);
        }

        private void _worldMapArea(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x1420, value);
        }

        private s16 _sunsSongState()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x1422);
        }

        private void _sunsSongState(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x1422, value);
        }

        private s16 _healthAccumulator()
        {
            return Memory.RAM.ReadS16(this.pointer + 0x1424);
        }

        private void _healthAccumulator(s16 value)
        {
            Memory.RAM.WriteS16(this.pointer + 0x1424, value);
        }
    }
}
